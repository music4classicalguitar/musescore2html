# musescore2html.process.Translations

version = Program ''{0}'', version ''{1}''

musescore.label = MuseScore executable
musescore.select = Select MuseScore executable
musescore.select.canceled = Select MuseScore executable canceled
musescore.select.message = Please specify Musescore executable

musescore.not.specified = MuseScore executable not specified.
musescore.not.recognized = MuseScore executable not recognized.
musescore.not.found = MuseScore executable ''{0}'' not found.
musescore.not.unique = MuseScore executable ''{0}'' is not unique.
musescore.not.exists = MuseScore executable ''{0}'' does not exist.
musescore.not.executable = MuseScore executable ''{0}'' is not executable.
musescore.error = Error: RC ''{0}'' from ''''{1}''''.

outputdirectory.label = Outputdirectory
outputdirectory.select = Select outputdirectory
outputdirectory.selected = Outputdirectory selected ''{0}''
outputdirectory.select.canceled = Select outputdirectory canceld.

scores.label = MuseScore scores
scores.select = Select MuseScore scores
scores.select.canceled = Select score(s) canceled
scores.process = Process scores
scores.process.cancel = Cancel process scores
scores.process.error = Error: processing score(s).
scores.process.error.message = Error: processing score(s), ''{0}''.
scores.process.ready = Ready processing score(s).
scores.process.canceled = Canceled processing scores.

score.selected = Score ''{0}'' selected.
score.processed = Score ''{0}'' processed.
score.processed.checkonly = Score ''{0}'' would be processed.

logging.label = Logging
logging.clear = Clear log

help.label = Help
close.label = Close

loglevel.option.silent = Silent
loglevel.option.quiet = Quiet
loglevel.option.normal = Normal
loglevel.option.verbose = Verbose
loglevel.option.extreme = Extreme

errors = Errors : ''{0}''.

exception.error = Error: ''{0}''.
exception.error.message = Error: ''{0}''.

exception.config.error = Error setting default configuration.
exception.config.error.message = Error setting default configuration: ''{0}''.

translate.not.supported = Translations: language ''''{0}'''' not supported, fallback to default language ''''{1}''''.
translate.using = Translations using: ''''{0}'''' language ''''{1}''''.

language.label = Language

processinfo.error = Error: exception process-information.
processinfo.error.message = Error: exception process-information, ''{0}''.

info.parsing.start = Start parsing arguments.
info.parsing.ready = Ready parsing arguments.

info = ''{0}''
info.arguments = Arguments and options:
info.osid = Operating system: ''{0}''.
info.language = Language: ''{0}''.
info.interface = Interface: ''{0}''.
info.quiet = Quiet: ''{0}''.
info.verbose = Verbose: ''{0}''.
info.generatehtml = Generate html: ''{0}''.
info.configuration = Configuration is set: ''{0}''.
info.configuration.default = Configuration: ''{0}''.
info.configuration.path = Configuration: ''{0}''.
info.musescore = MuseScore: ''{0}''.
info.outputdirectory = OutputDirectory: ''{0}''.
info.indexfilename = Indexfilename: ''{0}''.
info.fileoption = File option: ''{0}''.
info.score = Score: ''{0}''.
info.errors = Errors: ''{0}''.
info.logging = Logging:
info.logging.none = Logging: none
info.logging.details = Logging: message ''''{0}'''', code ''''{1}''''.

info.memory = Memory : free ''{0}'', max ''{1}'', total ''{2}''.

info.generate.start = Start generating files.
info.generate.ready = Ready generating files.

option.empty = Error: empty argument (string with length 0).
option.unknown = Error: option ''{0}'' unknown.
option.not.expected = Error: option ''{0}'', not expected.
option.missing.argument = Error: option ''{0}'', missing argument.

option.interface.multiple = Error: option ''{0}'', multiple interface options used.
option.indexfile.multiple = Error: option ''{0}'', multiple indexfile options used.
option.indexfile.nohtml = Error: option ''{0}'' and option -x used.
option.musescore.multiple = Error: option ''{0}'', multiple musescore executable options used.
option.file.multiple = Error: option ''{0}'', multiple file options used, use only one of : [ -p | -n | -r ].
option.verbose.multiple = Error: option ''{0}'', multiple verbose options used, use only one of :  [ -s | -q | -v ].
option.config.multiple = Error: option ''{0}'', multiple configuration options used.

configuration = Configuration
configfile.not.exists = Configuration file ''{0}'' does not exist.
configfile.error.null = Error reading configuration file, file not specified.
configfile.error.read = Error reading configuration file ''{0}''.
configfile.error.read.message = Error reading configuration file ''{0}'', ''{1}''.
configfile.error.creatingdirectory = Error creating directory ''{0}''.
configfile.error.creatingdirectory.message = Error creating directory ''{0}'', ''{1}''.
configfile.error.write = Error writing configuration file ''{0}''.
configfile.error.write.message = Error writing configuration file ''{0}'', ''{1}''.

configlastusedfile.not.exists = Configuration file (last used directories) ''{0}'' does not exist.
configlastusedfile.error.read = Error reading configuration file (last used directories) ''{0}''.
configlastusedfile.error.read.message = Error reading configuration file (last used directories) ''{0}'', ''{1}''.
configlastusedfile.error.creatingdirectory = Error creating directory (last used directories) ''{0}''.
configlastusedfile.error.creatingdirectory.message = Error creating directory (last used directories) ''{0}'', ''{1}''.
configlastusedfile.error.write = Error writing configuration file (last used directories) ''{0}''.
configlastusedfile.error.write.message = Error writing configuration file (last used directories) ''{0}'', ''{1}''.

outputdirectory.not.found = Outputdirectory ''{0}'' not found.
outputdirectory.not.unique = Outputdirectory ''{0}'' not unique.
outputdirectory.not.exists = Outputdirectory ''{0}'' does not exist.
outputdirectory.not.writable = Outputdirectory ''{0}'' not writable.

score.not.found = Score ''{0}'' does not exist.
score.not.exists = Score ''{0}'' does not exist.
score.not.readable = Score ''{0}'' is not readable.
score.not.unique = Score ''{0}'' is not unique.
score.duplicate.names = Duplicate score names : ''''{0}'''' and ''''{1}''''.
score.extension.error = Score ''{0}'' does not have extension ''mscz'' or ''mscx'', but ''{1}''.
score.error.generate = Error generating files for ''{0}''.
score.error.generate.message = Error generating files for ''''{0}'''', ''{1}''.

directory.created = Directory ''{0}'' created.
directory.created.checkonly = Directory ''{0}'' would be created.
directory.created.error = Error creating directory ''{0}''.

file.option.new = Only generate files if none present
file.option.newer = Only replace files if score is newer
file.option.replace = Replace all files

file.not.writable = File ''{0}'' is not writable.
file.already.exists = File ''{0}'' already exists, skipping.
file.is.newer = File ''{0}'' is newer than score, skipping.
file.generated = Generated file ''{0}''.
file.replaced = Replaced file ''{0}''.
file.installed = File ''{0}'' installed.

file.not.writable.checkonly = File ''{0}'' is not writable.
file.already.exists.checkonly = File ''{0}'' already exists, would be skipped.
file.is.newer.checkonly = File ''{0}'' is newer than score, would be skipped.
file.generated.checkonly = File ''{0}'' would be generated.
file.replaced.checkonly = File ''{0}'' would be replaced .
file.installed.checkonly = Files ''{0}'' would be installed.

file.generatehtml.label = Generate all files including a html-file for each score

indexfilename.label = Indexfilename
indexfile.generateall.label = Generate indexfile for all files, including already present
indexfilename.option.none = Don't generate indexfile
indexfilename.option.html.no = Generate indexfile with links to the html-file 'ShowScore.html' to show the scores
indexfilename.option.html.yes = Generate indexfile with links to the html-files for the scores.

indexfile.not.afilename = Indexfile ''{0}'' is not a filename, omit directory part.
indexfile.not.specified = Indexfile not specified.
indexfile.not.unique = Indexfile ''{0}'' is not unique.
indexfile.no.files = No files '*.metajson' found in directory ''{0}'', no reason the generate an indexfile.
indexfile.is.newer = Indexfile ''{0}'' is newer than already generated files '*.metajson'.
indexfile.already.exists = Indexfile ''{0}'' already exists, skipping.
indexfile.error = Error generating indexfile ''{0}''.
indexfile.error.message = Error generating indexfile ''{0}'', ''{1}''.
indexfile.generated = Generated indexfile ''{0}''.
indexfile.generated.checkonly = Indexfile ''{0}'' would be generated.
indexfile.replaced = Replaced indexfile ''{0}''.
indexfile.installed = Installed file ''{0}'' for use with indexfile.

summary = Scores: processed ''{0}'', skipped ''{1}''; files : generated ''{2}'', installed ''{3}'', directories: created ''{4}''.
summary.checkonly = Scores: ''{0}'' would be processed, ''{1}'' would be skipped ; files : ''{2}'' would be generated, ''{3}'' would be installed , directories: ''{4}'' would be created.

gui.filefilter.allfiles = All files
gui.filefilter.alldirectories = All directories
